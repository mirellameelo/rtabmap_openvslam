[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:[m[K In function â€˜[01m[Kvoid publi(auto:3, auto:4&, auto:5)[m[Kâ€™:
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:117:14:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™
     odom_msg_[01;31m[K->[m[Kheader.stamp = node->now();
              [01;31m[K^~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:118:14:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™
     odom_msg_[01;31m[K->[m[Kheader.frame_id = "odom";
              [01;31m[K^~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:119:14:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™
     odom_msg_[01;31m[K->[m[Kchild_frame_id = "base_link";
              [01;31m[K^~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:120:14:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™
     odom_msg_[01;31m[K->[m[Kpose.pose.orientation.x = transform_tf.getRotation().getX();
              [01;31m[K^~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:121:14:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™
     odom_msg_[01;31m[K->[m[Kpose.pose.orientation.y = transform_tf.getRotation().getY();
              [01;31m[K^~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:122:14:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™
     odom_msg_[01;31m[K->[m[Kpose.pose.orientation.z = transform_tf.getRotation().getZ();
              [01;31m[K^~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:123:14:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™
     odom_msg_[01;31m[K->[m[Kpose.pose.orientation.w = transform_tf.getRotation().getW();
              [01;31m[K^~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:124:14:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™
     odom_msg_[01;31m[K->[m[Kpose.pose.position.x = transform_tf.getOrigin().getX();
              [01;31m[K^~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:125:14:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™
     odom_msg_[01;31m[K->[m[Kpose.pose.position.y = transform_tf.getOrigin().getY();
              [01;31m[K^~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:126:14:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™
     odom_msg_[01;31m[K->[m[Kpose.pose.position.z = transform_tf.getOrigin().getZ();
              [01;31m[K^~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:[m[K In function â€˜[01m[Kvoid callback(const ConstSharedPtr&, std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >, std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >, std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::CameraInfo_<std::allocator<void> >, std::allocator<void> > >, std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::CameraInfo_<std::allocator<void> >, std::allocator<void> > >, std::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >, openvslam::system*, cv::Mat, std::shared_ptr<rclcpp::Node>)[m[Kâ€™:
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:179:49:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™
         left_image_msg->header.stamp = odom_msg_[01;31m[K->[m[Kheader.stamp;
                                                 [01;31m[K^~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:186:50:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™
         right_image_msg->header.stamp = odom_msg_[01;31m[K->[m[Kheader.stamp;
                                                  [01;31m[K^~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:189:45:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™
         left_config.header.stamp = odom_msg_[01;31m[K->[m[Kheader.stamp;
                                             [01;31m[K^~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:200:46:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Knav_msgs::msg::Odometry {aka nav_msgs::msg::Odometry_<std::allocator<void> >}[m[Kâ€™
         right_config.header.stamp = odom_msg_[01;31m[K->[m[Kheader.stamp;
                                              [01;31m[K^~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:147:122:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kleft_publisher[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
                std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Image_<std::allocator<void>>, std::allocator<void>>> [01;35m[Kleft_publisher[m[K,
                                                                                                                         [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:148:122:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kright_publisher[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
                std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Image_<std::allocator<void>>, std::allocator<void>>> [01;35m[Kright_publisher[m[K,
                                                                                                                         [01;35m[K^~~~~~~~~~~~~~~[m[K
make[2]: *** [src/CMakeFiles/run_slam.dir/run_slam.cc.o] Error 1
make[1]: *** [src/CMakeFiles/run_slam.dir/all] Error 2
make: *** [all] Error 2
