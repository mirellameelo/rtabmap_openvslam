[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:[m[K In function â€˜[01m[Kvoid callback(std::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >, openvslam::system*)[m[Kâ€™:
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:64:121:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kodometry_publisher[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
 void callback(std::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void>>> [01;35m[Kodometry_publisher[m[K,
                                                                                                                         [01;35m[K^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:65:32:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[KSLAM[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
             openvslam::system* [01;35m[KSLAM[m[K){
                                [01;35m[K^~~~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:[m[K In function â€˜[01m[Kvoid mono_tracking(const std::shared_ptr<openvslam::config>&, const string&, const string&, bool, const string&)[m[Kâ€™:
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:102:16:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Ktp_0[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
     const auto [01;35m[Ktp_0[m[K = std::chrono::steady_clock::now();
                [01;35m[K^~~~[m[K
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:106:23:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kcustom_qos[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
     rmw_qos_profile_t [01;35m[Kcustom_qos[m[K = rmw_qos_profile_default;
                       [01;35m[K^~~~~~~~~~[m[K
In file included from [01m[K/usr/include/boost/bind.hpp:22:0[m[K,
                 from [01m[K/usr/include/boost/thread/detail/thread.hpp:30[m[K,
                 from [01m[K/usr/include/boost/thread/thread_only.hpp:22[m[K,
                 from [01m[K/usr/include/boost/thread/thread.hpp:12[m[K,
                 from [01m[K/usr/include/boost/thread.hpp:13[m[K,
                 from [01m[K/usr/include/pcl-1.8/pcl/io/boost.h:51[m[K,
                 from [01m[K/usr/include/pcl-1.8/pcl/io/file_io.h:43[m[K,
                 from [01m[K/usr/include/pcl-1.8/pcl/io/pcd_io.h:44[m[K,
                 from [01m[K/opt/ros/eloquent/include/pcl_conversions/pcl_conversions.h:72[m[K,
                 from [01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:44[m[K:
/usr/include/boost/bind/bind.hpp: In instantiation of â€˜[01m[Kvoid boost::_bi::list2<A1, A2>::operator()(boost::_bi::type<void>, F&, A&, int) [with F = void (*)(std::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >, openvslam::system*); A = boost::_bi::rrlist1<const std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >&>; A1 = boost::arg<1>; A2 = boost::_bi::value<openvslam::system*>][m[Kâ€™:
[01m[K/usr/include/boost/bind/bind.hpp:1306:50:[m[K   required from â€˜[01m[Kboost::_bi::bind_t<R, F, L>::result_type boost::_bi::bind_t<R, F, L>::operator()(A1&&) [with A1 = const std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >&; R = void; F = void (*)(std::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >, openvslam::system*); L = boost::_bi::list2<boost::arg<1>, boost::_bi::value<openvslam::system*> >; boost::_bi::bind_t<R, F, L>::result_type = void][m[Kâ€™
[01m[K/usr/include/c++/7/bits/std_function.h:316:37:[m[K   required from â€˜[01m[Kstatic void std::_Function_handler<void(_ArgTypes ...), _Functor>::_M_invoke(const std::_Any_data&, _ArgTypes&& ...) [with _Functor = boost::_bi::bind_t<void, void (*)(std::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >, openvslam::system*), boost::_bi::list2<boost::arg<1>, boost::_bi::value<openvslam::system*> > >; _ArgTypes = {const std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >&}][m[Kâ€™
[01m[K/usr/include/c++/7/bits/std_function.h:694:19:[m[K   required from â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = boost::_bi::bind_t<void, void (*)(std::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >, openvslam::system*), boost::_bi::list2<boost::arg<1>, boost::_bi::value<openvslam::system*> > >; <template-parameter-2-2> = void; <template-parameter-2-3> = void; _Res = void; _ArgTypes = {const std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >&}][m[Kâ€™
[01m[K/opt/ros/eloquent/include/message_filters/simple_filter.h:72:67:[m[K   required from â€˜[01m[Kmessage_filters::Connection message_filters::SimpleFilter<M>::registerCallback(const C&) [with C = boost::_bi::bind_t<void, void (*)(std::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >, openvslam::system*), boost::_bi::list2<boost::arg<1>, boost::_bi::value<openvslam::system*> > >; M = sensor_msgs::msg::Image_<std::allocator<void> >][m[Kâ€™
[01m[K/home/mirella/openvslam/ros/2/src/openvslam/src/run_slam.cc:119:66:[m[K   required from here
[01m[K/usr/include/boost/bind/bind.hpp:319:35:[m[K [01;31m[Kerror: [m[Kcould not convert â€˜[01m[K(& a)->boost::_bi::rrlist1<const std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >&>::operator[](boost::_bi::storage1<boost::arg<1> >::a1_)[m[Kâ€™ from â€˜[01m[Kconst std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™
         [01;31m[Kunwrapper<F>::unwrap(f, 0)(a[base_type::a1_], a[base_type::a2_])[m[K;
         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
make[2]: *** [src/CMakeFiles/run_slam.dir/run_slam.cc.o] Error 1
make[1]: *** [src/CMakeFiles/run_slam.dir/all] Error 2
make: *** [all] Error 2
